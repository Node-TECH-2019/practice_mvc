/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
    id 'war'
    id 'eclipse'
    id 'eclipse-wtp'
}

mainClassName = "practice_mvc.examples.component.controller.HelloWorldController"

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    providedCompile 'javax:javaee-web-api:7.0'
    // compile files( 'lib/mysql-connector-java:8.0.20.jar')
    compile fileTree(dir: 'lib', include: '*.jar')
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'
    // compile 'org.springframework:spring-web:5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-web', version: '5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-context', version: '5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-aop', version: '5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-core', version: '5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.2.7.RELEASE'
    compile group: 'org.springframework', name: 'spring-oxm', version: '5.2.7.RELEASE'
}

//文字化け対策
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// task hello {
// 	println("HELLO World!");
// }

